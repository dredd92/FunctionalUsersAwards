// <auto-generated />
using System;
using FunctionalUsersAwards.EfContext;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace FunctionalUsersAwards.EfMigrations.Migrations
{
    [DbContext(typeof(UserAwardDbContext))]
    partial class UserAwardDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.4-rtm-31024")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("FunctionalUsersAwards.EfContext.Award", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("AwardId");

                    b.Property<string>("Title")
                        .HasColumnName("Title")
                        .HasMaxLength(255);

                    b.HasKey("Id");

                    b.ToTable("Award");
                });

            modelBuilder.Entity("FunctionalUsersAwards.EfContext.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("UserId");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnName("Username")
                        .HasMaxLength(255);

                    b.HasKey("Id");

                    b.ToTable("User");
                });

            modelBuilder.Entity("FunctionalUsersAwards.EfContext.UserAward", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnName("UserId");

                    b.Property<Guid>("AwardId")
                        .HasColumnName("AwardId");

                    b.HasKey("UserId", "AwardId");

                    b.HasIndex("AwardId");

                    b.ToTable("UserAward");
                });

            modelBuilder.Entity("FunctionalUsersAwards.EfContext.UserAward", b =>
                {
                    b.HasOne("FunctionalUsersAwards.EfContext.Award", "Award")
                        .WithMany("Users")
                        .HasForeignKey("AwardId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("FunctionalUsersAwards.EfContext.User", "User")
                        .WithMany("Awards")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
